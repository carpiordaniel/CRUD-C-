<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>